
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND BREAK DEF ELIF ELSE FOR GE IF LE LEN MINUSEQUAL MOD NUMBER PLUSEQUAL PLUSPLUS PRINT RETURN VARIABLE WHILEprogram : statementsstatements : statements statement\n                  | statement statement : assignment\n                  | print\n                  | if\n                  | while\n                  | for\n                  | returnsomething\n                  | function\n                  | runfunction\n                  | BREAKreturnsomething : RETURN\n                       | RETURN listassignment : VARIABLE '=' expr\n                  | VARIABLE MINUSEQUAL expr\n                  | VARIABLE PLUSEQUAL expr\n                  | VARIABLE '[' expr ']' '=' expr\n                  | VARIABLE PLUSPLUSexpr : expr '+' term\n            | expr '-' term\n            | term\n            | '[' list ']' list : list ',' expr\n            | exprterm : term '*' factor\n            | term '/' factor\n            | term MOD factor\n            | factorfactor : NUMBER\n              | VARIABLE\n              | VARIABLE '[' VARIABLE ']'\n              | VARIABLE '[' NUMBER ']'\n              | LEN '(' VARIABLE ')'\n              | '(' expr ')' print : PRINT '(' VARIABLE ')' if : IF '(' conditions ')' '{' statements '}'\n           | IF '(' conditions ')' '{' statements '}' elses elses : ELIF '(' conditions ')' '{' statements '}'\n             | ELIF '(' conditions ')' '{' statements '}' elses\n             | ELSE '{' statements '}' while : WHILE '(' conditions ')' '{' statements '}' for : FOR '(' assignment ';' conditions ';' assignment ')' '{' statements '}' conditions : condition AND condition\n                  | conditioncondition : expr '>' expr\n                 | expr LE expr\n                 | expr '<' expr\n                 | expr GE exprfunction : DEF VARIABLE '(' args ')' '{' statements '}' args : args ',' VARIABLE\n            | VARIABLErunfunction : VARIABLE '(' list ')' "
    
_lr_action_items = {'BREAK':([0,2,3,4,5,6,7,8,9,10,11,12,18,20,25,31,32,33,35,36,37,41,42,43,65,66,75,76,77,78,79,80,81,85,89,95,97,98,99,102,103,104,106,108,109,111,112,116,118,119,121,122,124,125,126,127,128,129,],[12,12,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-2,-19,-14,-25,-22,-29,-30,-31,-15,-16,-17,-53,-36,-24,-20,-21,-26,-27,-28,-23,-35,12,12,-32,-33,-34,-18,12,12,12,-37,-42,12,-38,-50,12,12,12,12,-41,-43,12,12,-39,-40,]),'VARIABLE':([0,2,3,4,5,6,7,8,9,10,11,12,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,41,42,43,53,54,55,56,57,58,60,61,63,65,66,68,69,70,71,72,74,75,76,77,78,79,80,81,85,88,89,95,97,98,99,101,102,103,104,105,106,108,109,111,112,116,117,118,119,121,122,124,125,126,127,128,129,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,37,40,-2,37,37,37,37,-19,37,46,37,37,52,-14,-25,-22,37,-29,-30,-31,37,-15,-16,-17,37,37,37,37,37,37,82,84,86,-53,-36,37,37,37,37,37,37,-24,-20,-21,-26,-27,-28,-23,-35,37,13,13,-32,-33,-34,107,-18,13,13,52,13,-37,-42,13,-38,-50,37,13,13,13,13,-41,-43,13,13,-39,-40,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,18,20,25,31,32,33,35,36,37,41,42,43,65,66,75,76,77,78,79,80,81,85,89,95,97,98,99,102,103,104,106,108,109,111,112,116,118,119,121,122,124,125,126,127,128,129,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-2,-19,-14,-25,-22,-29,-30,-31,-15,-16,-17,-53,-36,-24,-20,-21,-26,-27,-28,-23,-35,14,14,-32,-33,-34,-18,14,14,14,-37,-42,14,-38,-50,14,14,14,14,-41,-43,14,14,-39,-40,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,18,20,25,31,32,33,35,36,37,41,42,43,65,66,75,76,77,78,79,80,81,85,89,95,97,98,99,102,103,104,106,108,109,111,112,116,118,119,121,122,124,125,126,127,128,129,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-2,-19,-14,-25,-22,-29,-30,-31,-15,-16,-17,-53,-36,-24,-20,-21,-26,-27,-28,-23,-35,15,15,-32,-33,-34,-18,15,15,15,-37,-42,15,-38,-50,15,15,15,15,-41,-43,15,15,-39,-40,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,18,20,25,31,32,33,35,36,37,41,42,43,65,66,75,76,77,78,79,80,81,85,89,95,97,98,99,102,103,104,106,108,109,111,112,116,118,119,121,122,124,125,126,127,128,129,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-2,-19,-14,-25,-22,-29,-30,-31,-15,-16,-17,-53,-36,-24,-20,-21,-26,-27,-28,-23,-35,16,16,-32,-33,-34,-18,16,16,16,-37,-42,16,-38,-50,16,16,16,16,-41,-43,16,16,-39,-40,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,18,20,25,31,32,33,35,36,37,41,42,43,65,66,75,76,77,78,79,80,81,85,89,95,97,98,99,102,103,104,106,108,109,111,112,116,118,119,121,122,124,125,126,127,128,129,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-2,-19,-14,-25,-22,-29,-30,-31,-15,-16,-17,-53,-36,-24,-20,-21,-26,-27,-28,-23,-35,17,17,-32,-33,-34,-18,17,17,17,-37,-42,17,-38,-50,17,17,17,17,-41,-43,17,17,-39,-40,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,18,20,25,31,32,33,35,36,37,41,42,43,65,66,75,76,77,78,79,80,81,85,89,95,97,98,99,102,103,104,106,108,109,111,112,116,118,119,121,122,124,125,126,127,128,129,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-2,-19,-14,-25,-22,-29,-30,-31,-15,-16,-17,-53,-36,-24,-20,-21,-26,-27,-28,-23,-35,18,18,-32,-33,-34,-18,18,18,18,-37,-42,18,-38,-50,18,18,18,18,-41,-43,18,18,-39,-40,]),'DEF':([0,2,3,4,5,6,7,8,9,10,11,12,18,20,25,31,32,33,35,36,37,41,42,43,65,66,75,76,77,78,79,80,81,85,89,95,97,98,99,102,103,104,106,108,109,111,112,116,118,119,121,122,124,125,126,127,128,129,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-2,-19,-14,-25,-22,-29,-30,-31,-15,-16,-17,-53,-36,-24,-20,-21,-26,-27,-28,-23,-35,19,19,-32,-33,-34,-18,19,19,19,-37,-42,19,-38,-50,19,19,19,19,-41,-43,19,19,-39,-40,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,18,20,25,31,32,33,35,36,37,41,42,43,65,66,75,76,77,78,79,80,81,85,97,98,99,102,108,109,112,116,124,125,128,129,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-2,-19,-14,-25,-22,-29,-30,-31,-15,-16,-17,-53,-36,-24,-20,-21,-26,-27,-28,-23,-35,-32,-33,-34,-18,-37,-42,-38,-50,-41,-43,-39,-40,]),'}':([3,4,5,6,7,8,9,10,11,12,18,20,25,31,32,33,35,36,37,41,42,43,65,66,75,76,77,78,79,80,81,85,97,98,99,102,103,104,108,109,111,112,116,121,122,124,125,127,128,129,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-2,-19,-14,-25,-22,-29,-30,-31,-15,-16,-17,-53,-36,-24,-20,-21,-26,-27,-28,-23,-35,-32,-33,-34,-18,108,109,-37,-42,116,-38,-50,124,125,-41,-43,128,-39,-40,]),'=':([13,52,64,],[21,21,88,]),'MINUSEQUAL':([13,52,],[22,22,]),'PLUSEQUAL':([13,52,],[23,23,]),'[':([13,18,21,22,23,24,26,28,29,34,37,39,52,53,68,69,70,71,72,74,88,117,],[24,34,34,34,34,34,34,34,34,34,60,34,24,34,34,34,34,34,34,34,34,34,]),'PLUSPLUS':([13,52,],[25,25,]),'(':([13,14,15,16,17,18,21,22,23,24,26,28,29,34,38,39,40,53,54,55,56,57,58,68,69,70,71,72,74,88,113,117,],[26,27,28,29,30,39,39,39,39,39,39,39,39,39,61,39,63,39,39,39,39,39,39,39,39,39,39,39,39,39,117,39,]),'NUMBER':([18,21,22,23,24,26,28,29,34,39,53,54,55,56,57,58,60,68,69,70,71,72,74,88,117,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,83,36,36,36,36,36,36,36,36,]),'LEN':([18,21,22,23,24,26,28,29,34,39,53,54,55,56,57,58,68,69,70,71,72,74,88,117,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),';':([25,33,35,36,37,41,42,43,48,51,76,77,78,79,80,81,85,90,91,92,93,94,96,97,98,99,102,],[-19,-22,-29,-30,-31,-15,-16,-17,-45,74,-20,-21,-26,-27,-28,-23,-35,-44,-46,-47,-48,-49,105,-32,-33,-34,-18,]),')':([25,32,33,35,36,37,41,42,43,45,46,47,48,50,62,75,76,77,78,79,80,81,84,85,86,87,90,91,92,93,94,97,98,99,102,107,110,120,],[-19,-25,-22,-29,-30,-31,-15,-16,-17,65,66,67,-45,73,85,-24,-20,-21,-26,-27,-28,-23,99,-35,-52,100,-44,-46,-47,-48,-49,-32,-33,-34,-18,-51,115,123,]),',':([31,32,33,35,36,37,45,59,75,76,77,78,79,80,81,85,86,87,97,98,99,107,],[53,-25,-22,-29,-30,-31,53,53,-24,-20,-21,-26,-27,-28,-23,-35,-52,101,-32,-33,-34,-51,]),']':([32,33,35,36,37,44,59,75,76,77,78,79,80,81,82,83,85,97,98,99,],[-25,-22,-29,-30,-31,64,81,-24,-20,-21,-26,-27,-28,-23,97,98,-35,-32,-33,-34,]),'+':([32,33,35,36,37,41,42,43,44,49,62,75,76,77,78,79,80,81,85,91,92,93,94,97,98,99,102,],[54,-22,-29,-30,-31,54,54,54,54,54,54,54,-20,-21,-26,-27,-28,-23,-35,54,54,54,54,-32,-33,-34,54,]),'-':([32,33,35,36,37,41,42,43,44,49,62,75,76,77,78,79,80,81,85,91,92,93,94,97,98,99,102,],[55,-22,-29,-30,-31,55,55,55,55,55,55,55,-20,-21,-26,-27,-28,-23,-35,55,55,55,55,-32,-33,-34,55,]),'>':([33,35,36,37,49,76,77,78,79,80,81,85,97,98,99,],[-22,-29,-30,-31,69,-20,-21,-26,-27,-28,-23,-35,-32,-33,-34,]),'LE':([33,35,36,37,49,76,77,78,79,80,81,85,97,98,99,],[-22,-29,-30,-31,70,-20,-21,-26,-27,-28,-23,-35,-32,-33,-34,]),'<':([33,35,36,37,49,76,77,78,79,80,81,85,97,98,99,],[-22,-29,-30,-31,71,-20,-21,-26,-27,-28,-23,-35,-32,-33,-34,]),'GE':([33,35,36,37,49,76,77,78,79,80,81,85,97,98,99,],[-22,-29,-30,-31,72,-20,-21,-26,-27,-28,-23,-35,-32,-33,-34,]),'AND':([33,35,36,37,48,76,77,78,79,80,81,85,91,92,93,94,97,98,99,],[-22,-29,-30,-31,68,-20,-21,-26,-27,-28,-23,-35,-46,-47,-48,-49,-32,-33,-34,]),'*':([33,35,36,37,76,77,78,79,80,85,97,98,99,],[56,-29,-30,-31,56,56,-26,-27,-28,-35,-32,-33,-34,]),'/':([33,35,36,37,76,77,78,79,80,85,97,98,99,],[57,-29,-30,-31,57,57,-26,-27,-28,-35,-32,-33,-34,]),'MOD':([33,35,36,37,76,77,78,79,80,85,97,98,99,],[58,-29,-30,-31,58,58,-26,-27,-28,-35,-32,-33,-34,]),'{':([67,73,100,114,115,123,],[89,95,106,118,119,126,]),'ELIF':([108,128,],[113,113,]),'ELSE':([108,128,],[114,114,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,89,95,106,118,119,126,],[2,103,104,111,121,122,127,]),'statement':([0,2,89,95,103,104,106,111,118,119,121,122,126,127,],[3,20,3,3,20,20,3,20,3,3,20,20,3,20,]),'assignment':([0,2,30,89,95,103,104,105,106,111,118,119,121,122,126,127,],[4,4,51,4,4,4,4,110,4,4,4,4,4,4,4,4,]),'print':([0,2,89,95,103,104,106,111,118,119,121,122,126,127,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'if':([0,2,89,95,103,104,106,111,118,119,121,122,126,127,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'while':([0,2,89,95,103,104,106,111,118,119,121,122,126,127,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'for':([0,2,89,95,103,104,106,111,118,119,121,122,126,127,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'returnsomething':([0,2,89,95,103,104,106,111,118,119,121,122,126,127,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'function':([0,2,89,95,103,104,106,111,118,119,121,122,126,127,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'runfunction':([0,2,89,95,103,104,106,111,118,119,121,122,126,127,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'list':([18,26,34,],[31,45,59,]),'expr':([18,21,22,23,24,26,28,29,34,39,53,68,69,70,71,72,74,88,117,],[32,41,42,43,44,32,49,49,32,62,75,49,91,92,93,94,49,102,49,]),'term':([18,21,22,23,24,26,28,29,34,39,53,54,55,68,69,70,71,72,74,88,117,],[33,33,33,33,33,33,33,33,33,33,33,76,77,33,33,33,33,33,33,33,33,]),'factor':([18,21,22,23,24,26,28,29,34,39,53,54,55,56,57,58,68,69,70,71,72,74,88,117,],[35,35,35,35,35,35,35,35,35,35,35,35,35,78,79,80,35,35,35,35,35,35,35,35,]),'conditions':([28,29,74,117,],[47,50,96,120,]),'condition':([28,29,68,74,117,],[48,48,90,48,48,]),'args':([63,],[87,]),'elses':([108,128,],[112,129,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','py_yacc.py',17),
  ('statements -> statements statement','statements',2,'p_statements','py_yacc.py',22),
  ('statements -> statement','statements',1,'p_statements','py_yacc.py',23),
  ('statement -> assignment','statement',1,'p_statement','py_yacc.py',28),
  ('statement -> print','statement',1,'p_statement','py_yacc.py',29),
  ('statement -> if','statement',1,'p_statement','py_yacc.py',30),
  ('statement -> while','statement',1,'p_statement','py_yacc.py',31),
  ('statement -> for','statement',1,'p_statement','py_yacc.py',32),
  ('statement -> returnsomething','statement',1,'p_statement','py_yacc.py',33),
  ('statement -> function','statement',1,'p_statement','py_yacc.py',34),
  ('statement -> runfunction','statement',1,'p_statement','py_yacc.py',35),
  ('statement -> BREAK','statement',1,'p_statement','py_yacc.py',36),
  ('returnsomething -> RETURN','returnsomething',1,'p_returnsomething','py_yacc.py',41),
  ('returnsomething -> RETURN list','returnsomething',2,'p_returnsomething','py_yacc.py',42),
  ('assignment -> VARIABLE = expr','assignment',3,'p_assignment','py_yacc.py',47),
  ('assignment -> VARIABLE MINUSEQUAL expr','assignment',3,'p_assignment','py_yacc.py',48),
  ('assignment -> VARIABLE PLUSEQUAL expr','assignment',3,'p_assignment','py_yacc.py',49),
  ('assignment -> VARIABLE [ expr ] = expr','assignment',6,'p_assignment','py_yacc.py',50),
  ('assignment -> VARIABLE PLUSPLUS','assignment',2,'p_assignment','py_yacc.py',51),
  ('expr -> expr + term','expr',3,'p_expr','py_yacc.py',56),
  ('expr -> expr - term','expr',3,'p_expr','py_yacc.py',57),
  ('expr -> term','expr',1,'p_expr','py_yacc.py',58),
  ('expr -> [ list ]','expr',3,'p_expr','py_yacc.py',59),
  ('list -> list , expr','list',3,'p_list','py_yacc.py',64),
  ('list -> expr','list',1,'p_list','py_yacc.py',65),
  ('term -> term * factor','term',3,'p_term','py_yacc.py',70),
  ('term -> term / factor','term',3,'p_term','py_yacc.py',71),
  ('term -> term MOD factor','term',3,'p_term','py_yacc.py',72),
  ('term -> factor','term',1,'p_term','py_yacc.py',73),
  ('factor -> NUMBER','factor',1,'p_factor','py_yacc.py',78),
  ('factor -> VARIABLE','factor',1,'p_factor','py_yacc.py',79),
  ('factor -> VARIABLE [ VARIABLE ]','factor',4,'p_factor','py_yacc.py',80),
  ('factor -> VARIABLE [ NUMBER ]','factor',4,'p_factor','py_yacc.py',81),
  ('factor -> LEN ( VARIABLE )','factor',4,'p_factor','py_yacc.py',82),
  ('factor -> ( expr )','factor',3,'p_factor','py_yacc.py',83),
  ('print -> PRINT ( VARIABLE )','print',4,'p_print','py_yacc.py',88),
  ('if -> IF ( conditions ) { statements }','if',7,'p_if','py_yacc.py',93),
  ('if -> IF ( conditions ) { statements } elses','if',8,'p_if','py_yacc.py',94),
  ('elses -> ELIF ( conditions ) { statements }','elses',7,'p_elses','py_yacc.py',99),
  ('elses -> ELIF ( conditions ) { statements } elses','elses',8,'p_elses','py_yacc.py',100),
  ('elses -> ELSE { statements }','elses',4,'p_elses','py_yacc.py',101),
  ('while -> WHILE ( conditions ) { statements }','while',7,'p_while','py_yacc.py',106),
  ('for -> FOR ( assignment ; conditions ; assignment ) { statements }','for',11,'p_for','py_yacc.py',111),
  ('conditions -> condition AND condition','conditions',3,'p_conditions','py_yacc.py',115),
  ('conditions -> condition','conditions',1,'p_conditions','py_yacc.py',116),
  ('condition -> expr > expr','condition',3,'p_condition','py_yacc.py',120),
  ('condition -> expr LE expr','condition',3,'p_condition','py_yacc.py',121),
  ('condition -> expr < expr','condition',3,'p_condition','py_yacc.py',122),
  ('condition -> expr GE expr','condition',3,'p_condition','py_yacc.py',123),
  ('function -> DEF VARIABLE ( args ) { statements }','function',8,'p_function','py_yacc.py',128),
  ('args -> args , VARIABLE','args',3,'p_args','py_yacc.py',132),
  ('args -> VARIABLE','args',1,'p_args','py_yacc.py',133),
  ('runfunction -> VARIABLE ( list )','runfunction',4,'p_runfunction','py_yacc.py',137),
]
